services:
  web:
    build:
      context: .
      # dockerfile: Dockerfile
    working_dir: /toktot-backend/src
    container_name: toktot-backend
    env_file:
      - .env
    environment:
      - PYTHONPATH=/toktot-backend/src
      - DJANGO_SETTINGS_MODULE=config.settings.base
    command: >
      sh -c "python manage.py collectstatic --noinput &&
            gunicorn core.wsgi:application --bind 0.0.0.0:8000"
    # command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/toktot-backend
      - static_volume:/toktot-backend/src/static
      - media_volume:/toktot-backend/src/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network

  db:
    image: postgres:17
    container_name: postgres_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8080:8080"
    volumes:
      - static_volume:/toktot-backend/src/static
      - media_volume:/toktot-backend/src/media
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume: